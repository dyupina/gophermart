name: Go Application

on:
  push:
    branches:
      - working_branch # TODO master

jobs:
  build-and-run:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup Go environment
      uses: actions/setup-go@v2
      with:
        go-version: '1.x'

    - name: Install Task
      uses: arduino/setup-task@v2
      with:
        version: 3.x
        repo-token: ${{ secrets.GITHUB_TOKEN }}

    # - name: Run Linter
    #   run: task lint

    - name: Login to Docker Hub
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_TOKEN }}
      run: echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin

    - name: Build and run #using Taskfile
      # run: task docker-run

      env:
        POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
        POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
        DATABASE_URI: postgresql://${{POSTGRES_USER}}:${{POSTGRES_PASSWORD}}@localhost/${{POSTGRES_DB}}?sslmode=disable

      run: |
        echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin

        docker network create my-network
        docker run --name my-postgres \
        --network my-network \
        -e POSTGRES_USER="$POSTGRES_USER" \
        -e POSTGRES_PASSWORD="$POSTGRES_PASSWORD" \
        -e POSTGRES_DB="$POSTGRES_DB" \
        postgres

        sudo docker run --rm \
        --name my-app \
        --network my-network -p 8081:8081 \
        -v $(pwd):/app -w /app \
        -e DB_HOST=my-postgres \
        -e DB_PORT=5432 \
        -e DATABASE_URI={{.db_uri}} \
        debian:bookworm-slim \
        ./${GITHUB_REPOSITORY##*/}
      # - sudo docker run --rm -v $(pwd):/app -w /app -e DATABASE_URI={{.db_uri}} {{.docker_image}} ./{{.binary_name}}


