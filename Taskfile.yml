version: '3'

includes:
  taskfile_lint: ./Taskfile_lint.yml

vars:
  binary_name: gophermart
  app_path: cmd/gophermart
  accrual_name: cmd/accrual/accrual_linux_amd64

dotenv: ['.env']

tasks:
  all:
    deps: [clean, run-accrual, run]

  build:
    cmds:
      - echo "Building {{.binary_name}}..."
      - source load_env_variables.sh
      - go build -o {{.binary_name}} ./{{.app_path}}
    deps: [lint]

  run:
    cmds:
      - echo "Running {{.binary_name}}..."
      - ./{{.binary_name}}
    deps: [build]
  
  run-accrual:
    cmds:
      - echo "Running {{.accrual_name}}..."
      - ./{{.accrual_name}} -d "$DATABASE_URI"

  clean:
    cmds:
      - echo "Cleaning up..."
      - rm -f {{.binary_name}}
  
  lint:
    cmds:
      - echo "Linting {{.binary_name}}..."
      - "task taskfile_lint:install-linter" # TODO remove ?
      - "task taskfile_lint:lint"
  
  docker-run:
    cmds:
      - |
        export POSTGRES_USER=$POSTGRES_USER
        export POSTGRES_PASSWORD=$POSTGRES_PASSWORD
        export POSTGRES_DB=$POSTGRES_DB
        DB_HOST=my-postgres
        MY_APP=my-app

        DATABASE_URI=$(sh -c 'echo "postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${DB_HOST}/${POSTGRES_DB}?sslmode=disable"')
        export DATABASE_URI=$DATABASE_URI


        echo $POSTGRES_USER
        echo $POSTGRES_PASSWORD
        echo $POSTGRES_DB
        echo $DB_HOST
        echo $DATABASE_URI

        containers=($DB_HOST $MY_APP)

        for container_name in "${containers[@]}"; do
          if sudo docker ps -a --format '{{.Names}}' | grep -Eq "^${container_name}$"; then
            echo "Container exists. Stopping container ${container_name}..."
            sudo docker stop "${container_name}"
          else
            echo "Container ${container_name} does not exist."
          fi
        done

        sudo docker network rm -f my-network

        sudo docker rm -f $DB_HOST
        sudo docker rm -f $MY_APP

        sudo docker network create my-network

        sudo docker run -d --name "$DB_HOST" \
        --network my-network -p 5433:5432 \
        -e POSTGRES_USER="$POSTGRES_USER" \
        -e POSTGRES_PASSWORD="$POSTGRES_PASSWORD" \
        -e POSTGRES_DB="$POSTGRES_DB" \
        postgres

        sudo docker run -it \
        --name my-app \
        --network my-network -p 8081:8081 \
        -v $(pwd):/app -w /app \
        -e DATABASE_URI="$DATABASE_URI" \
        golang:1.23.6 \
        sh -c 'cd ./cmd/gophermart && go build -buildvcs=false -o gophermart && ./gophermart'
    
  