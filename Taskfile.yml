version: '3'

includes:
  taskfile_lint: ./Taskfile_lint.yml

# TODO убрать строку с подключением
vars:
  binary_name: gophermart
  app_path: cmd/gophermart
  accrual_name: cmd/accrual/accrual_linux_amd64
  db_uri: postgresql://gophermart_user:gophermart_user@localhost/gophermart_db?sslmode=disable

tasks:
  all:
    deps: [clean, run-accrual, run]

  build:
    cmds:
      - echo "Building {{.binary_name}}..."
      - go build -o {{.binary_name}} ./{{.app_path}}
    deps: [lint]

  run:
    cmds:
      - echo "Running {{.binary_name}}..."
      - ./{{.binary_name}}
    deps: [build]
  
  run-accrual:
    cmds:
      - echo "Running {{.accrual_name}}..."
      - ./{{.accrual_name}} -d "{{.db_uri}}"

  clean:
    cmds:
      - echo "Cleaning up..."
      - rm -f {{.binary_name}}
  
  lint:
    cmds:
      - echo "Linting {{.binary_name}}..."
      - "task taskfile_lint:install-linter" # TODO remove ?
      - "task taskfile_lint:lint"


  # docker-run: # CI
  #   cmds:
  #     - echo "Running {{.binary_name}} in Docker..."
  #     - docker network create my-network
  #     - |
  #       docker run --name my-postgres 
  #       --network my-network
  #       -e POSTGRES_USER=gophermart_user
  #       -e POSTGRES_PASSWORD=gophermart_user
  #       -e POSTGRES_DB=gophermart_db
  #       postgres
  #     - |
  #       sudo docker run --rm 
  #       --name my-app 
  #       --network my-network -p 8081:8081 
  #       -v $(pwd):/app -w /app
  #       -e DB_HOST=my-postgres
  #       -e DB_PORT=5432
  #       -e DATABASE_URI={{.db_uri}}
  #       {{.docker_image}}
  #       ./{{.binary_name}}
  #     # - sudo docker run --rm -v $(pwd):/app -w /app -e DATABASE_URI={{.db_uri}} {{.docker_image}} ./{{.binary_name}}


  #   deps: [build]


